language:
  - cpp

# git:
#   depth: false

matrix:
  fast_finish: false
  include:
    - os: linux
      dist: bionic
      compiler: clang

    - os: linux
      dist: bionic
      compiler: gcc

    - os: osx
      osx_image: xcode11
      language: cpp
      addons:
        homebrew:
          packages:
          - conan
          - cmake

  allow_failures:
    - os: osx

install:
# Install conan
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then pip install conan; fi
  - which conan
  - conan user
# install cmake 3.17
# recipe adopted from https://cliutils.gitlab.io/modern-cmake/chapters/intro/installing.html
#  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then mkdir -p cmake-3.15 && wget -qO- "https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz" | tar --strip-components=1 -xz -C cmake-3.15; export PATH=`pwd`/cmake-3.15/bin:$PATH; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then mkdir -p cmake-3.17 && wget -qO- "https://cmake.org/files/v3.17/cmake-3.17.0-Linux-x86_64.tar.gz" | tar --strip-components=1 -xz -C cmake-3.17; export PATH=`pwd`/cmake-3.17/bin:$PATH; fi
  - which cmake
  - cmake --version

  script:
   - cmake -Bbuild -H.
   - CTEST_OUTPUT_ON_FAILURE=1 make -C build all test
